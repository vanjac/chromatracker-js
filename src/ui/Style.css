/* utility */

.hflex {
    display: flex;
    flex-direction: row;
    align-items: center;
}
.vflex {
    display: flex;
    flex-direction: column;
}
.width0 {
    width: 0
}
.min-width-0 {
    min-width: 0;
}
.flex-grow {
    flex: 1 0 0;
}
.hscrollable {
    overflow-x: auto;
}
.vscrollable {
    overflow-y: auto;
}
.hscrollable > *,
.vscrollable > * {
    flex-shrink: 0;
}
.hide {
    display: none !important;
}

.shrink-clip-y {
    min-height: 0;
    overflow-y: hidden;
}

.top {
    top: 0;
}
.left {
    left: 0;
}
.bottom {
    bottom: 0;
}
.right {
    right: 0;
}

.z-0 {
    z-index: 0;
}
.z-above {
    z-index: 1;
}
.z-below {
    z-index: -1;
}

.justify-start,
.button-list > button,
.button-list button:first-child {
    justify-content: start;
}

hr {
    height: 0.5em;
    border: none;
}

/* common */

body {
    font-family: 'Iosevka Aile Custom Web', system-ui, sans-serif;
    font-size: 16px;
    line-height: 1.5;
    --line-height: 1.5em;

    background: var(--color-bg);
    color: var(--color-fg);
    accent-color: var(--color-fg-hl);
}

input {
    background: var(--color-bg);
    border-color: var(--color-fg);
    border: 1px solid var(--color-fg);
    border-radius: 3px;
}

input:disabled {
    background: var(--color-bg-btn)
}

.small-input {
    width: 4em;
}
.med-input {
    width: 6em;
}

textarea {
    white-space: pre;
}

pre,
code,
textarea,
table,
.pattern-cell {
    font-family: 'Iosevka Fixed Custom Web', monospace;
}

label,
output {
    padding: 0 0.33em;
}

/* Buttons */

.label-button {
    white-space: nowrap;
    padding: 0; /* override label */
}
.label-button input {
    display: none;
}

button,
select,
.label-button span {
    min-width: 2.5em;
    min-height: 2.5em;

    display: inline-flex;
    justify-content: center;
    align-items: center;
    white-space: nowrap;
    background: var(--color-bg-btn);
    border: 1px solid var(--color-fg);
    border-radius: 5px;
    touch-action: manipulation;
}

button,
select,
.label-button,
.tab-group {
    margin: 2px;
}

.overflow-content {
    overflow: hidden;
    text-overflow: ellipsis;
}

.tab-group label {
    margin: 0;
}

.tab-group label:not(:first-of-type) span {
    border-top-left-radius: 0;
    border-bottom-left-radius: 0;
}

.tab-group label:not(:last-of-type) span {
    border-top-right-radius: 0;
    border-bottom-right-radius: 0;
    border-right-width: 0;
}

.label-button span {
    flex: 1 0 0;
}

button:active,
select:active,
.label-button :active + span,
button:disabled,
select:disabled
.label-button :disabled + span {
    background: var(--color-bg-btn-press);
}

.label-button :checked + span,
.show-checked {
    background: var(--color-fg-hl);
    color: var(--color-bg)
}

.label-button :checked:active + span,
.show-checked:active {
    background: var(--color-bg-hl);
    color: var(--color-fg)
}

.icon svg {
    width: var(--line-height);
    height: var(--line-height);
    fill: currentColor;
    vertical-align: top;
}

label {
    display: inline-flex;
    align-items: center;
}

.med-menu {
    width: 5em;
}

dialog {
    display: flex;
    flex-direction: column;

    /* center dialog */
    margin: 0 auto; /* margin:auto doesn't work in old Chrome versions */
    position: absolute;
    top: 50%;
    transform: translateY(-50%);

    background: var(--color-bg);
    color: var(--color-fg);
    padding: 1em;
    border: 1px solid var(--color-fg);
    border-radius: 12px;
    box-shadow: black 0 0 40px;
}

::backdrop {
    background: rgba(0, 0, 0, 0.2);
}

.message-dialog {
    max-width: 25em;
}
.message-out {
    white-space: pre-wrap;
}

/* grid */

.properties-grid {
    display: grid;
    grid-template-columns: auto minmax(0, 1fr);
    align-items: center;
}

/* sequence edit */

.seq-button,
.seq-select {
    width: 2.5em;
    margin-left: 0;
    margin-right: 0;
}
.seq-button span,
.seq-select {
    min-width: 0;
    padding-left: 0;
    padding-right: 0;
}

.seq-select {
    appearance: none;
    text-align: center;
    text-align-last: center;
}

/* pattern table */

th, .pattern-cell {
    border: 1px solid var(--color-fg);
    white-space: nowrap;
    box-sizing: content-box;
}
table {
    border-collapse: collapse;
    table-layout: fixed;
    width: 0;
}
table,
.pattern-cell {
    font-size: 14px;
}
/* https://issues.chromium.org/issues/40511425 */
th {
    position: sticky;
    background-color: var(--color-bg);
    z-index: 1;
}
thead {
    /* Fix borders disappearing in Safari, and incorrect Z order in old Chrome */
    contain: none;
}
thead th {
    top: 0;
}
tbody th {
    left: 0;
}
thead th input,
thead th label {
    vertical-align: middle;
}
tbody tr:nth-child(4n+2),
tbody tr:nth-child(4n+2) th {
    background: var(--color-bg-btn);
}
tbody tr:nth-child(16n+2),
tbody tr:nth-child(16n+2) th {
    background: var(--color-bg-btn-press);
}
.sel-cell {
    background: var(--color-bg-hl);
}
.sel-pitch .cell-pitch,
.sel-inst .cell-inst,
.sel-effect .cell-effect {
    background: var(--color-fg-hl);
    color: var(--color-bg);
}
td,
tr,
.cell-pitch,
.cell-effect,
.cell-inst {
    /* Layout performance optimization */
    height: var(--line-height);
    overflow: hidden;
    contain: strict;
}
td,
.pattern-col-head {
    width: 10ch;
}
.cell-pitch,
.cell-effect,
.cell-inst {
    display: inline-block;
    vertical-align: top;
    box-sizing: content-box;
}
.cell-pitch, .cell-effect {
    width: 3ch;
}
.cell-inst, .pattern-row-head {
    width: 2ch;
}
.hilite-row {
    background: var(--color-bg-alt) !important;
}

.hselect {
    display: table-row;
}

.hselect option {
    display: table-cell;
}

.pattern-table-space {
    height: 50%;
}

/* cell entry */

.keypad-key {
    width: 2em;
    flex-shrink: 0;
    margin: 0;
}
.keypad-half-key {
    width: 1em;
    flex-shrink: 0;
}
.keypad-key span {
    min-width: 0;
    padding-left: 0;
    padding-right: 0;
}

.scroll-lock {
    touch-action: none;
}

.black-key :not(:checked) + span {
    background: var(--color-fg);
    color: var(--color-bg);
    border-color: var(--color-bg);
}

.hex-grid {
    display: grid;
    grid: auto / 1fr 1fr 1fr 1fr;
}

.effect-desc {
    font-size: 0.6em;
}

/* wave editor */

.wave-edit {
    padding: 0 1em;
    touch-action: none;
}

.wave-container {
    contain: none;
    position: relative;
}

.wave-mark,
.wave-mark:before,
.wave-range {
    contain: none;
    position: absolute;
    height: 100%;
}
.wave-mark:before,
.wave-range {
    pointer-events: none;
}
.wave-mark:before {
    content: "";
    padding: 0 1px;
    margin: 0 -1px;
    background-color: inherit;
}
.wave-range {
    opacity: 0.3;
}

.wave-select {
    background: var(--color-fg-hl);
}
.wave-loop,
.wave-play-mark {
    background: var(--color-fg-alt);
}
